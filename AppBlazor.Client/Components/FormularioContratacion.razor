@inject NavigationManager navigationManager
@inject EmpleadoService empleadoService
@inject SucursalService sucursalService
@inject DirectorService directorService

<h2>@titulo</h2>

<EditForm Model="@oEmpleadoCLS" OnValidSubmit="@guardar">
    <DataAnnotationsValidator />

    <div class="mt-3">
        <label>Número Empleado</label>
        <InputNumber class="form-control" @bind-Value="oEmpleadoCLS.Num_Empl" readonly />
        <ValidationMessage For="(() => oEmpleadoCLS.Num_Empl)" />
    </div>

    <div class="mt-3">
        <label>Nombre</label>
        <InputText class="form-control" @bind-Value="oEmpleadoCLS.Nombre" />
        <ValidationMessage For="(() => oEmpleadoCLS.Nombre)" />
    </div>

    <div class="mt-3">
        <label>Edad</label>
        <InputNumber class="form-control" @bind-Value="oEmpleadoCLS.Edad" />
        <ValidationMessage For="(() => oEmpleadoCLS.Edad)" />
    </div>

    <div class="mt-3">
        <label>Cargo</label>
        <InputText class="form-control" @bind-Value="oEmpleadoCLS.Cargo" />
        <ValidationMessage For="(() => oEmpleadoCLS.Cargo)" />
    </div>

    <div class="mt-3">
        <label>Fecha de Contrato</label>
        <InputDate class="form-control" @bind-Value="oEmpleadoCLS.Fecha_contrato" />
        <ValidationMessage For="(() => oEmpleadoCLS.Fecha_contrato)" />
    </div>

    <div class="mt-3">
        <label>Cuota</label>
        <InputText class="form-control" @bind-Value="oEmpleadoCLS.Cuota" />
        <ValidationMessage For="(() => oEmpleadoCLS.Cuota)" />
    </div>

    <div class="mt-3">
        <label>Ventas</label>
        <InputText class="form-control" @bind-Value="oEmpleadoCLS.Ventas" />
        <ValidationMessage For="(() => oEmpleadoCLS.Ventas)" />
    </div>

    <div class="mt-3">
        <label>Sucursal</label>
        <InputSelect class="form-control" @bind-Value="idSucursalSeleccionada">
            <option value="0">--Seleccione--</option>
            @foreach (var sucursal in listaSucursales)
            {
                <option value="@sucursal.idsucursal">@sucursal.nombresucursal</option>
            }
        </InputSelect>
    </div>

    <div class="mt-3">
        <label>Director</label>
        <InputSelect class="form-control" @bind-Value="idDirectorSeleccionado">
            <option value="0">--Seleccione--</option>
            @foreach (var director in listaDirectores)
            {
                <option value="@director.iddirector">@director.nombredirector</option>
            }
        </InputSelect>
    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-success">Guardar</button>
        <button type="button" class="btn btn-danger" @onclick="regresar">Regresar</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int numEmpleado { get; set; }

    public EmpleadoCLS oEmpleadoCLS { get; set; } = new EmpleadoCLS();
    public List<SucursalEmpleadoCLS> listaSucursales { get; set; } = new();
    public List<DirectorCLS> listaDirectores { get; set; } = new();
    private int idSucursalSeleccionada { get; set; } = 0;
    private int idDirectorSeleccionado { get; set; } = 0;
    public string titulo { get; set; } = "";

    protected override Task OnInitializedAsync()
    {
        listaSucursales = sucursalService.ListarSucursales();
        listaDirectores = directorService.ListarDirectores();

        if (numEmpleado == 0)
        {
            titulo = "Agregar Empleado";
        }
        else
        {
            titulo = "Editar Empleado";
            oEmpleadoCLS = empleadoService.RecuperarEmpleadoPorId(numEmpleado);

            // Seleccionar los IDs correctos en los selects
            idSucursalSeleccionada = sucursalService.ObtenerIdSucursal(oEmpleadoCLS.sucursalEmpleado);
            idDirectorSeleccionado = directorService.ObtenerIdDirector(oEmpleadoCLS.directorEmpleado);
        }

        return base.OnInitializedAsync();
    }

    private void guardar()
    {
        // Mapear los nombres de sucursal y director según selección
        oEmpleadoCLS.sucursalEmpleado = sucursalService.ObtenerNombreSucursal(idSucursalSeleccionada);
        oEmpleadoCLS.directorEmpleado = directorService.ObtenerNombreDirector(idDirectorSeleccionado);

        empleadoService.GuardarEmpleado(oEmpleadoCLS);
        navigationManager.NavigateTo("/empleados");
    }

    private void regresar()
    {
        navigationManager.NavigateTo("/empleados");
    }
}
